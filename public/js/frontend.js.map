{"version":3,"sources":["frontend.js"],"names":[],"mappingsfile":"frontend.js","sourcesContent":["$(document).ready(function(){\n\n    // If we are currently anonymous, hide the meals\n    if ($('.user.noone').length > 0) {\n        $('.meal').hide();\n    }\n\n    // Click handler for anonymous subscription\n    $('.proceed_anonymous').on('click', function(event){\n        event.preventDefault();\n\n        $('.anonymous .method').hide(200);\n        $('.anonymous form').show(200);\n        $('.meal').show(200);\n    });\n\n    // Click handler and submission process for buttons\n    $('.meal button').on('click', function(event){\n\n        event.preventDefault();\n\n        // Set button to working state\n        var button = $(this);\n\n        // Choose appropriate submission process\n        if ($('.user.someone').size() == 1) {\n            if (button.hasClass('unregistered')) {\n                register(button);\n            }\n            else {\n                deregister(button);\n            }\n        }\n        else {\n            if (button.hasClass('unregistered')) {\n                registerNonUser(button);\n            }\n        }\n    });\n\n    // If a deadline has passed, remove the normal click handler\n    $('.meal.deadline_passed button').off('click');\n    $('.meal.deadline_passed button.unregistered').on('click', function(event){\n        event.preventDefault();\n        App.showNotification('Je kunt je niet meer aanmelden voor deze maaltijd', 'Deadline verstreken', 'error');\n    });\n    $('.meal.deadline_passed button.registered').on('click', function(event){\n        event.preventDefault();\n        App.showNotification('Je kunt je niet meer afmelden voor deze maaltijd', 'Deadline verstreken', 'error');\n    });\n});\n\nfunction register(button)\n{\n    set_button_state(button, 'busy', false);\n\n    // Send AJAX-call to register for meal\n    $.ajax({\n        type: 'POST',\n        url: '/aanmelden',\n        contentType: 'application/json',\n        dataType: 'json',\n        data: JSON.stringify({\n           meal_id: button.data('id')\n        }),\n        success: function() {\n            set_button_state(button, 'registered', true);\n        },\n        error: function(error) {\n            set_button_state(button, 'unregistered', true);\n            App.fatalError(error);\n        },\n    });\n}\n\nfunction deregister(button)\n{\n    set_button_state(button, 'busy', false);\n\n    // Send AJAX-call to register for meal\n    $.ajax({\n        type: 'POST',\n        url: '/afmelden',\n        contentType: 'application/json',\n        dataType: 'json',\n        data: JSON.stringify({\n           meal_id: button.data('id')\n        }),\n        success: function() {\n            set_button_state(button, 'unregistered', true);\n        },\n        error: function(error) {\n            set_button_state(button, 'registered', true);\n            App.fatalError(error);\n        },\n    });\n}\n\nfunction registerNonUser(button)\n{\n    set_button_state(button, 'busy', false);\n\n    // Check form fields\n    if ($('#name').val() == '' || $('#email').val() == '') {\n        App.showNotification('Je moet je naam en e-mailadres invullen');\n        set_button_state(button, 'unregistered', true);\n        return;\n    }\n\n    // Send AJAX-call to register for meal\n    $.ajax({\n        type: 'POST',\n        url: '/aanmelden',\n        contentType: 'application/json',\n        dataType: 'json',\n        data: JSON.stringify({\n            name: $('#name').val(),\n            email: $('#email').val(),\n            handicap: $('#handicap').val(),\n            meal_id: button.data('id')\n        }),\n        success: function() {\n            set_button_state(button, 'registered', false);\n\n            // Show warning that email confirmation is needed\n            App.showNotification('Je moet je aanmelding nog bevestigen. We hebben je hiervoor een e-mail gestuurd. Volg de link in de e-mail om je aanmelding definitief te maken.', 'Bevestiging nodig', 'warning');\n        },\n        error: function(error){\n            App.fatalError(error);\n            set_button_state(button, 'unregistered', true);\n        },\n    });\n}\n\n/**\n * Sets the state of a button\n * @param {DOMObject} button the button to change\n * @param {String} state either one of 'unregistered', 'busy' or 'registered'\n * @param {Boolean} useable true if clicking the button will do something, false otherwise\n * @return {undefined}\n */\nfunction set_button_state(button, state, useable)\n{\n    button.removeClass();\n    button.addClass(state);\n    if (!useable) {\n        button.addClass('unusable');\n    }\n\n    switch (state)\n    {\n        case 'unregistered':\n        {\n            button.html('nom!');\n            break;\n        }\n        case 'busy':\n        {\n            button.html('nom! <img src=\"images/spinner.gif\" height=\"16\" width=\"16\" alt=\"\">');\n            break;\n        }\n        case 'registered':\n        {\n            button.html('&#10004;');\n            break;\n        }\n    }\n}\n\n$(document).ready(function(){\n\n    // Set diet dialog\n    $('#set_profile_handicap').on('click', update_handicap);\n});\n\n/**\n * Update the handicap setting of a user on the server\n */\nfunction update_handicap(event)\n{\n    event.preventDefault();\n\n    var handicap = $('#handicap').data('handicap');\n    var handicap = prompt('Specificeer je dieetwensen zo exact en duidelijk mogelijk:', handicap);\n\n    // No-op on cancel\n    if (handicap == null) {\n        return;\n    }\n\n    $.ajax({\n        type: 'POST',\n        url: '/handicap',\n        contentType: 'application/json',\n        dataType: 'application/json',\n        data: JSON.stringify({handicap: handicap}),\n        success: function() {\n            $('#handicap').data('handicap', handicap);\n\n            if (handicap == '') {\n                $('#handicap').html('Geen dieet ingesteld').addClass('no_diet');\n            }\n            else {\n                $('#handicap').html('&ldquo;' + handicap + '&rdquo;').removeClass('no_diet');\n            }\n        },\n        error: App.fatalError,\n    });\n}\n"],"sourceRoot":"/source/"}