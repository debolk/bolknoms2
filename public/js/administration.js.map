{"version":3,"sources":["administration.js"],"names":[],"mappingsfile":"administration.js","sourcesContent":["Administration = {\n\n    /**\n     * Start the Adminstration specific log\n     * @return {undefined}\n     */\n    init: function() {\n        // Bind event handlers\n        $('#print').on('click', Administration.printList);\n        $('#new_registration').on('submit', Administration.addRegistration);\n        $('#registrations').on('click', '.remove_registration', Administration.removeRegistration);\n        $('#subscribe_anonymous').on('click', Administration.addAnonymousRegistration);\n        $('.edit-handicap').on('click', Administration.editHandicap);\n        $(document).on('click', '.block-user', Administration.blockUser);\n        $(document).on('click', '.release-user', Administration.releaseUser);\n    },\n\n    /**\n     * Trigger print dialog for the list of registrations\n     * asking for confirmation if no registrations are present\n     * @return {undefined}\n     */\n    printList: function() {\n        var counter = parseInt($('#count').html());\n        if (counter === 0 && !confirm('De lijst is leeg. Weet je zeker dat je deze wilt afdrukken?')) {\n            return;\n        }\n        window.print();\n    },\n\n    /**\n     * Add a new registration to a meal\n     * @param {Event} event\n     * @return {undefined}\n     */\n    addRegistration: function(event) {\n        event.preventDefault();\n\n        var form = this;\n\n        // Send AJAX-call to register for meal\n        $.ajax({\n            type: 'POST',\n            url: '/administratie/maaltijden/aanmelden',\n            contentType: 'application/json',\n            dataType: 'html',\n            data: JSON.stringify({\n                meal_id:  $(this).attr('data-meal_id'),\n                user_id: $('#user_id').val()\n            }),\n            success: function(response) {\n                $('#registrations tbody').append(response);\n                Administration.update_counter(+1);\n                form.reset();\n            },\n            error: App.fatalError\n        });\n    },\n\n    /**\n     * Add a new anonymous registration to a meal\n     * @param {Event} event\n     * @return {undefined}\n     */\n    addAnonymousRegistration: function(event) {\n\n        event.preventDefault();\n\n        var name = prompt('Naam');\n        if (!name) {\n            return;\n        }\n\n        var handicap = prompt('Evt. voedselhandicaps');\n\n        // Send AJAX-call to register for meal\n        $.ajax({\n            type: 'POST',\n            url: '/administratie/maaltijden/aanmelden',\n            contentType: 'application/json',\n            dataType: 'html',\n            data: JSON.stringify({\n                meal_id:  $(this).attr('data-meal_id'),\n                name:     name,\n                handicap: handicap\n            }),\n            success: function(response) {\n                $('#registrations tbody').append(response);\n                Administration.update_counter(+1);\n            },\n            error: App.fatalError\n        });\n    },\n\n    /**\n     * Remove a registration from a meal\n     * @param  {Event} event\n     * @return {undefined}\n     */\n    removeRegistration: function(event) {\n        event.preventDefault();\n\n        // Ask for confirmation\n        var registration = $(this).parents('.registration');\n        if (! confirm('Weet je zeker dat je '+$(this).attr('data-name')+' wilt uitschrijven?')) {\n            return;\n        }\n\n        // Remove registration\n        $.ajax({\n            type: 'POST',\n            url: '/administratie/maaltijden/afmelden/'+$(this).attr('data-id'),\n            contentType: 'application/json',\n            dataType: 'html',\n            success: function(response) {\n                registration.remove();\n                Administration.update_counter(-1);\n            },\n            error: App.fatalError\n        });\n    },\n\n    /**\n     * Updates the number of registrations in the interface\n     * @param  {int} increment the number to add to the counter, can be negative\n     */\n    updateCounter: function(increment) {\n        var counter = $('#count');\n        var value = parseInt(counter.html());\n        value += increment;\n        counter.html(value);\n    },\n\n    /**\n     * Show a dialog to update the handicap of a user\n     * and save the result to the server\n     * @param  {Event} event\n     * @return {undefined}\n     */\n    editHandicap: function(event) {\n        event.preventDefault();\n\n        var button = $(this);\n        var row = button.parents('tr')[0];\n\n        var user_id = button.attr('data-id');\n        var existing_handicap = button.attr('data-handicap');\n\n        var new_handicap = prompt('Dieet:', existing_handicap);\n\n        // Abort if cancel is clicked\n        if (new_handicap === null) {\n            return;\n        }\n\n        // Abort if handicap is unchanged\n        if (existing_handicap === new_handicap) {\n            return;\n        }\n\n        // Update server\n        $.ajax({\n            type: 'POST',\n            url: '/administratie/gebruikers/'+user_id+'/handicap',\n            contentType: 'application/json',\n            data: JSON.stringify({\n                handicap: new_handicap\n            }),\n            success: function(){\n                // Store handicap on button\n                button.attr('data-handicap', new_handicap);\n\n                // Update UI text\n                var cell = $('.handicap', row);\n                if (new_handicap !== '') {\n                    cell.html(new_handicap);\n                }\n                else {\n                    cell.html('Geen dieet ingesteld');\n                }\n            },\n            error: App.fatalError,\n        });\n    },\n\n    /**\n     * Block a user from the system\n     * @param  {Event} event\n     * @return {undefined}\n     */\n    blockUser: function(event) {\n        event.preventDefault();\n\n        var button = $(this);\n        $.ajax({\n            type: 'POST',\n            url: '/administratie/gebruikers/'+button.attr('data-id')+'/blokkeren',\n            contentType: 'application/json',\n            success: function(){\n                // Change UI to releasing\n                var cell = button.parents('td');\n                $('i', cell).removeClass('fa-times').addClass('fa-check');\n                button.removeClass('block-user').addClass('release-user').html('Vrijgeven');\n            },\n            error: App.fatalError,\n        });\n    },\n\n    /**\n     * Unblock a user from the system\n     * @param  {Event} event\n     * @return {undefined}\n     */\n    releaseUser: function(event) {\n        event.preventDefault();\n\n        var button = $(this);\n        $.ajax({\n            type: 'POST',\n            url: '/administratie/gebruikers/'+button.attr('data-id')+'/vrijgeven',\n            contentType: 'application/json',\n            success: function(){\n                // Change UI to blocking\n                var cell = button.parents('td');\n                $('i', cell).removeClass('fa-check').addClass('fa-times');\n                button.removeClass('release-user').addClass('block-user').html('Blokkeren');\n            },\n            error: App.fatalError,\n        });\n    },\n};\n\n$(document).on('ready', Administration.init);\n"],"sourceRoot":"/source/"}